apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: sf-composition
  labels:
    crossplane.io/xrd: xsfcs.saas.nokia.com
    nokia.com/saas-provider: aws
    nokia.com/saas-version: "v0.1.0"
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: saas.nokia.com/v1alpha1
    kind: XSFC
  patchSets:
    # General variables
    - name: region
      patches:
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.parameters.region

    - name: common-tags
      patches:
        - fromFieldPath: spec.parameters.ownerName
          toFieldPath: metadata.labels.ownerName
        - fromFieldPath: spec.parameters.projectId
          toFieldPath: metadata.labels.projectId
        - fromFieldPath: spec.parameters.env
          toFieldPath: metadata.labels.env

  resources:
    - name: vpc
      base:
        apiVersion: saas.nokia.com/v1alpha1
        kind: XVPCC
        metadata:
          name: xvpc
        spec:
          compositionSelector:
            matchLabels:
              crossplane.io/xrd: xvpccs.saas.nokia.com
              nokia.com/saas-provider: aws
              nokia.com/saas-version: "v0.1.0"
          parameters:
            region: <PATCHED>
            vpcName: <PATCHED>
            vpcCidrBlock: <PATCHED>
            publicSubnetName: <PATCHED>
            publicSubnetACidrBlock: <PATCHED>
            publicSubnetAAvailabilityZone: <PATCHED>
            publicSubnetBCidrBlock: <PATCHED>
            publicSubnetBAvailabilityZone: <PATCHED>
            privateSubnetName: <PATCHED>
            privateSubnetACidrBlock: <PATCHED>
            privateSubnetAAvailabilityZone: <PATCHED>
            privateSubnetBCidrBlock: <PATCHED>
            privateSubnetBAvailabilityZone: <PATCHED>
      patches:
        # General variables
        - type: PatchSet
          patchSetName: common-tags
        - type: PatchSet
          patchSetName: region
        # From CRD to Composition
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.vpcName
          toFieldPath: spec.parameters.vpcName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.vpcCidrBlock
          toFieldPath: spec.parameters.vpcCidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.publicSubnetName
          toFieldPath: spec.parameters.publicSubnetName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.publicSubnetACidrBlock
          toFieldPath: spec.parameters.publicSubnetACidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.publicSubnetAAvailabilityZone
          toFieldPath: spec.parameters.publicSubnetAAvailabilityZone
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.publicSubnetBCidrBlock
          toFieldPath: spec.parameters.publicSubnetBCidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.publicSubnetBAvailabilityZone
          toFieldPath: spec.parameters.publicSubnetBAvailabilityZone
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.privateSubnetName
          toFieldPath: spec.parameters.privateSubnetName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.privateSubnetACidrBlock
          toFieldPath: spec.parameters.privateSubnetACidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.privateSubnetAAvailabilityZone
          toFieldPath: spec.parameters.privateSubnetAAvailabilityZone
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.privateSubnetBCidrBlock
          toFieldPath: spec.parameters.privateSubnetBCidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.privateSubnetBAvailabilityZone
          toFieldPath: spec.parameters.privateSubnetBAvailabilityZone
        # From Composition to CRD
        - type: ToCompositeFieldPath
          fromFieldPath: status.vpcId
          toFieldPath: status.vpcId
        - type: ToCompositeFieldPath
          fromFieldPath: status.vpcPrivateSubnetsIds
          toFieldPath: status.vpcPrivateSubnetsIds
        - type: ToCompositeFieldPath
          fromFieldPath: status.vpcPublicSubnetsIds
          toFieldPath: status.vpcPublicSubnetsIds
        - type: ToCompositeFieldPath
          fromFieldPath: status.vpcNatGwRootZone1PublicIp
          toFieldPath: status.vpcNatGwRootZone1PublicIp
        - type: ToCompositeFieldPath
          fromFieldPath: status.vpcNatGwRootZone2PublicIp
          toFieldPath: status.vpcNatGwRootZone2PublicIp

    - name: rds
      base:
        apiVersion: saas.nokia.com/v1alpha1
        kind: XRDSC
        metadata:
          name: xrds
        spec:
          compositionSelector:
            matchLabels:
              crossplane.io/xrd: xrdscs.saas.nokia.com
              nokia.com/saas-provider: aws
              nokia.com/saas-version: "v0.1.0"
          parameters:
            region: <PATCHED>
            dbName: <PATCHED>
            identifier: <PATCHED>
            size: <PATCHED>
            username: <PATCHED>
            engine: <PATCHED>
            storageCapacity: <PATCHED>
            engineVersion: <PATCHED>
            skipFinalSnapshot: <PATCHED>
            publiclyAccessible: <PATCHED>
            autoGeneratePassword: <PATCHED>
            securityGroupName: <PATCHED>
            writeConnectionSecretsToNamespace: <PATCHED>
            vpcId: <PATCHED>
            vpcPrivateSubnets:
              - <PATCHED>
              - <PATCHED>
      patches:
        # General variables
        - type: PatchSet
          patchSetName: common-tags
        - type: PatchSet
          patchSetName: region
        # From CRD to Composition
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.dbName
          toFieldPath: spec.parameters.dbName
        # - type: FromCompositeFieldPath
        #   fromFieldPath: spec.parameters.identifier
        #   toFieldPath: spec.parameters.identifier
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.size
          toFieldPath: spec.parameters.size
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.username
          toFieldPath: spec.parameters.username
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.engine
          toFieldPath: spec.parameters.engine
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.storageCapacity
          toFieldPath: spec.parameters.storageCapacity
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.engineVersion
          toFieldPath: spec.parameters.engineVersion
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.skipFinalSnapshot
          toFieldPath: spec.parameters.skipFinalSnapshot
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.publiclyAccessible
          toFieldPath: spec.parameters.publiclyAccessible
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.autoGeneratePassword
          toFieldPath: spec.parameters.autoGeneratePassword
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.securityGroupName
          toFieldPath: spec.parameters.securityGroupName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.writeConnectionSecretsToNamespace
          toFieldPath: spec.parameters.writeConnectionSecretsToNamespace
        - type: FromCompositeFieldPath
          fromFieldPath: status.vpcId
          toFieldPath: spec.parameters.vpcId
        - type: FromCompositeFieldPath
          fromFieldPath: status.vpcPrivateSubnetsIds
          toFieldPath: spec.parameters.vpcPrivateSubnets

    - name: sqs
      base:
        apiVersion: saas.nokia.com/v1alpha1
        kind: XSQSC
        metadata:
          name: xsqs
        spec:
          compositionSelector:
            matchLabels:
              crossplane.io/xrd: xsqscs.saas.nokia.com
              nokia.com/saas-provider: aws
              nokia.com/saas-version: "v0.1.0"
          parameters:
            region: <PATCHED>
            queueName: <PATCHED>
            fifoQueue: <PATCHED>
            contentBasedDeduplication: <PATCHED>
            delaySeconds: <PATCHED>
            maximumMessageSize: <PATCHED>
            messageRetentionPeriod: <PATCHED>
            receiveMessageWaitTimeSeconds: <PATCHED>
            visibilityTimeout: <PATCHED>
            sqsManagedSseEnabled: <PATCHED>
      patches:
        # General variables
        - type: PatchSet
          patchSetName: common-tags
        - type: PatchSet
          patchSetName: region
        # From CRD to Composition
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.queueName
          toFieldPath: spec.parameters.queueName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.fifoQueue
          toFieldPath: spec.parameters.fifoQueue
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.contentBasedDeduplication
          toFieldPath: spec.parameters.contentBasedDeduplication
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.delaySeconds
          toFieldPath: spec.parameters.delaySeconds
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.maximumMessageSize
          toFieldPath: spec.parameters.maximumMessageSize
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.messageRetentionPeriod
          toFieldPath: spec.parameters.messageRetentionPeriod
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.receiveMessageWaitTimeSeconds
          toFieldPath: spec.parameters.receiveMessageWaitTimeSeconds
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.visibilityTimeout
          toFieldPath: spec.parameters.visibilityTimeout
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.sqsManagedSseEnabled
          toFieldPath: spec.parameters.sqsManagedSseEnabled

    # - name: eks
    #   base:
    #     apiVersion: saas.nokia.com/v1alpha1
    #     kind: XEKSC
    #     metadata:
    #       name: xeks
    #     spec:
    #       compositionSelector:
    #         matchLabels:
    #           crossplane.io/xrd: xsqscs.saas.nokia.com
    #           nokia.com/saas-provider: aws
    #           nokia.com/saas-version: "v0.1.0"
    #       target:
    #         region: <PATCHED>
    #         accountId: <PATCHED>
    #         provider: <PATCHED>
    #         permissionsBoundaryPolicy: <PATCHED>
    #       root:
    #         accountId: <PATCHED>
    #       parameters:
    #         clusterName: <PATCHED>
    #         vpcId: <PATCHED>
    #         vpcCidrBlock: <PATCHED>
    #         vpcSubnetZone1Id: <PATCHED>
    #         vpcSubnetZone2Id: <PATCHED>
    #         k8s-version: <PATCHED>
    #         capacityType: <PATCHED>
    #         imdsV2HttpTokens: <PATCHED>
    #         nodeGroupDesiredSize: <PATCHED>
    #         nodeGroupMaxSize: <PATCHED>
    #         nodeGroupMinSize: <PATCHED>
    #         nodesImageId: <PATCHED>
    #         nodesInstanceType: <PATCHED>
    #         nodesLabels:
    #           environment: <PATCHED>
    #           team: <PATCHED>
    #           project: <PATCHED>
    #           common: <PATCHED>
    #         nodesVolumeSize: <PATCHED>
    #         nodesVolumeType: <PATCHED>
    #         vpcNatGwRootZone1PublicIp: <PATCHED>
    #         vpcNatGwRootZone2PublicIp: <PATCHED>
    #         clusterAllowedCidrs: <PATCHED>
    #   patches:
    #     # From CRD to Composition
    #     # Patch target section
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.region
    #       toFieldPath: spec.target.region
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.accountId
    #       toFieldPath: spec.target.accountId
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.provider
    #       toFieldPath: spec.target.provider
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.permissionsBoundaryPolicy
    #       toFieldPath: spec.target.permissionsBoundaryPolicy
    #     # Patch root section
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.accountId
    #       toFieldPath: spec.root.accountId
    #     # Patch parameters section
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.clusterName
    #       toFieldPath: spec.parameters.clusterName
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: status.vpcId
    #       toFieldPath: spec.parameters.vpcId
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.vpcCidrBlock
    #       toFieldPath: spec.parameters.vpcCidrBlock
    #     # Get first element from list of subnets vpcPrivateSubnetsIds
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: status.vpcPrivateSubnetsIds[0]
    #       toFieldPath: spec.parameters.vpcSubnetZone1Id
    #     # Get second element from list of subnets vpcPrivateSubnetsIds
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: status.vpcPrivateSubnetsIds[1]
    #       toFieldPath: spec.parameters.vpcSubnetZone2Id
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.k8s-version
    #       toFieldPath: spec.parameters.k8s-version
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.capacityType
    #       toFieldPath: spec.parameters.capacityType
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.imdsV2HttpTokens
    #       toFieldPath: spec.parameters.imdsV2HttpTokens
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.nodeGroupDesiredSize
    #       toFieldPath: spec.parameters.nodeGroupDesiredSize
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.nodeGroupMaxSize
    #       toFieldPath: spec.parameters.nodeGroupMaxSize
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.nodeGroupMinSize
    #       toFieldPath: spec.parameters.nodeGroupMinSize
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.nodesImageId
    #       toFieldPath: spec.parameters.nodesImageId
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.nodesInstanceType
    #       toFieldPath: spec.parameters.nodesInstanceType
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.nodesLabels
    #       toFieldPath: spec.parameters.nodesLabels
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.nodesVolumeSize
    #       toFieldPath: spec.parameters.nodesVolumeSize
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.nodesVolumeType
    #       toFieldPath: spec.parameters.nodesVolumeType
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: status.vpcNatGwRootZone1PublicIp
    #       toFieldPath: spec.parameters.vpcNatGwRootZone1PublicIp
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: status.vpcNatGwRootZone2PublicIp
    #       toFieldPath: spec.parameters.vpcNatGwRootZone2PublicIp
    #     - type: FromCompositeFieldPath
    #       fromFieldPath: spec.parameters.clusterAllowedCidrs
    #       toFieldPath: spec.parameters.clusterAllowedCidrs